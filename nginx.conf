#load_module "modules/ngx_http_cache_purge_module.so";

worker_processes auto;
pid /tmp/nginx.pid;
daemon off;

events {
    worker_connections 1024;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type  application/octet-stream;

    access_log off;
    error_log off;

    sendfile on;
    keepalive_timeout 65;
    keepalive_disable msie6;
    keepalive_requests 100;
    tcp_nopush on;
    tcp_nodelay on;
    server_tokens off;
    
    gzip off;
    
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on; 
    #ssl_dhparam /etc/nginx/dhparam.pem; # openssl dhparam -out /etc/nginx/dhparam.pem 4096
    ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
    ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
    ssl_session_timeout  10m;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off; # Requires nginx >= 1.5.9
    ssl_stapling on; # Requires nginx >= 1.3.7
    ssl_stapling_verify on; # Requires nginx => 1.3.7
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    
    upstream backend {
        server 127.0.0.1:8080;
    }

    server {
        listen 80 default_server;
        server_name localhost;

        location ^~ /.well-known/acme-challenge/ {
            default_type "text/plain";
            root /etc/letsencrypt/webrootauth;
            expires 0;
        }

        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    server {
        listen 443 ssl default_server;
        server_name localhost;

        ssl_certificate     /etc/letsencrypt/live/localhost/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/localhost/privkey.pem;

        location / {
            proxy_set_header        Host                    $http_host;
            proxy_set_header        X-Real-IP               $remote_addr;
            proxy_set_header        X-NginX-Proxy           true;
            proxy_set_header        X-Forwarded-For         $proxy_add_x_forwarded_for;
            proxy_http_version      1.1;
            proxy_redirect          off;
            proxy_buffering         off;
            proxy_pass              http://backend;
        }
    }

    include /etc/nginx/conf.d/*.conf;
}
